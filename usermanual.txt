-------------------------------------------------
			klang
-------------------------------------------------

■使用方法:
　klang:001:0> のような表示があるので、続けて式を入力すると計算結果が#=> の後に表示される。
  新たに変数を定義するときは，変数 = 式 のように入力する。変数が代入された関数以下でスコープが決まる。
　　例) klang:001:0> a=1+2
	#=> 3 
  演算子には+,-,*,/,%(余剰),**(べき乗)等の算術演算子に加え、=,<,>,<=,>=等の関係演算子，
　and,or,not等の論理演算子が利用できる。
  機能の項目で示すように科学定数、三角関数や組み合わせ関数などが予め定義されている。
　また、新たな関数を自ら定義することも可能である。

　klangではベクトルや行列の計算にも対応している。次の例では行ベクトルtを定義し，その2乗を計算している。

・ベクトルの生成 c(...)
　　例) > t=c(1,2,3)
	#=> [ 1 2 3 ]
	> t**2
	#=> [ 1 4 9 ]
　※要素がxからyまでの連続する整数値であれば，seq(x,y)のように表すこともできる。
　　例) > seq(1,3)
	#=> [ 1 2 3]

・ベクトルから行列をつくる matrix(c(...),行,列)
　　例) >matrix(c(1,2,3,4,5,6,7,8,9),3,3)
	=> [
	　 1 2 3
	　 4 5 6
	   7 8 9
	   ]


　入力にエラーがあった場合、エラーのあった場所を文字単位で指摘する。
　　例) > +++++4
	Unexpected Character; +in line 1
	Raised in read_number_signed
	+_+_+++4

	Unexpected Character; +in line 1
	Raised in read_number_signed
	++_+_++4

	Unexpected Character; +in line 1
	Raised in read_number_signed
	+++_+_+4

	Unexpected Character; +in line 1
	Raised in read_number_signed
	++++_+_4

	#=> 0

  exitの入力で終了する。

■特徴：
1.文末区切り文字を使用せずに文末を確定できる。
　例えば,
　　例) >if k>2 fibo(k-1)+fibo(k-2) else 1
　あるいは、
　　例) >if k>2fibo(k-1)+fibo(k-2)else 1
　のような書き方ができる。
2.実行速度が高速
3.メモリ使用量が少なく軽量

■その他の機能：
・リテラル表記に対応した16進数、8進数での計算
　　例) > 0x10
	#=> 16

・科学定数
　定義されている科学定数を次に示す。
　　PI             … 円周率π
　　E              … e（ネイピア数）
　　C              … 光の速さ
　　NA             … アボガドロ数
　　R              … 1molの気体定数
　　F   　         … ファラデー定数
　　G              … 万有引力定数
　　H              … プランク定数
　　K              … ボルツマン定数
　　RYDBERG_CONST  … リュードベリ定数
　　E0             … 真空の誘電率
　　MU0            … 真空の透磁率
　　EC             … 電気素量
　　MACH           … 音速
　　GRAVITY_EARTH  … 重力加速度
　　

・ブール演算
　and, or, notを組み合わせた論理演算

・Σ、Π
　集合（行列）の直和、直積の計算
　　例) > Σ => sum(c(1,2,3,4,5))
	#=> 15

・対数
　log(x),log2(x),log10(x)
　　例) >log(2)
	#=> 0.30103

・三角関数,逆三角関数,双曲線関数,逆双曲線関数
　sin(x),cos(x),tan(x)
　arcsin(x),arccos(x),arctan(x)
　sinh(x),cosh(x),tanh(x)
  arcsinh(x),arccosh(x),arctanh(x)

・組み合わせ関数
　fact(n)    (=n!)
　perm(n,r)  (=nPr)
　comb(n,r)  (=nCr)
　hmpr(n,r)  (=nHr)

・if式
　　例) >a=1
	>if a=1 5
	#=> 5
	>if a=0 5 else 6
	#=> 6

・関数の定義
　関数を自ら宣言して定義することができる。
　再起呼び出しを用いてフィボナッチ数列を求める関数の定義例を示す。
　　例) > fibo = function(k) if k>2 fibo(k-1)+fibo(k-2) else 1
	> fibo(30)
	#=> 832040

・関数for
　関数for(配列,function(要素){ループ本文})
　1,2,3,4,5をすべて2倍してsumに足し上げる計算の例を示す。
　　例) > sum=0
	> for (c(1,2,3,4,5)*2, function(x) sum=sum+x)
	#=>30

